name: Project Pipeline

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run the tests and generate coverage report
        run: |
          yarn test site --coverage
          yarn test features-feedback --coverage
          yarn test shared --coverage

      - name: Run the e2e tests and generate coverage report
        run: |
          yarn e2e site-e2e --coverage
          yarn e2e features-feedback-e2e --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          verbose: true

      - name: Run @nrwl lint check
        run: yarn lint

      - name: Run @nrwl build check
        run: yarn build

      - name: Run @nrwl create release notes
        run: yarn release
